name: Push to GCR 

on:
 workflow_dispatch:
   inputs:
     DockerImageName:
       description: 'Docker image name'
       default: 'devsecops'
       required: true 
     tag:
       description: Docker tag
       default: latest
       required: true
jobs:
  Deploy:
    runs-on: ubuntu-latest #run this workflow on ubuntu instance
    permissions: #make sure we add permission to read and write package
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1 #checkouts your repo, so this workflow can access it
      - name: Login to GCR
        env:
          PROJECT_ID: cicd-372106 #create env called PROJECT_ID consisted of our actual GCP Project ID
        uses: google-github-actions/setup-gcloud@v0.3.0 #checkouts GCR repo, so this workflow can access it
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} #parse the value of repository secret called SERVICE_ACCOUNT_KEY that we have created earlier
          project_id: ${{ env.PROJECT_ID }} #parse the value of env called PROJECT_ID
          export_default_credentials: true
          
      - name: Build Docker Image
        env:
          IMAGE_NAME: ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}} #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
          PROJECT_ID: cicd-372106

        run: |
           mvn -B package --file pom.xml
           ls -la
           docker build -t $IMAGE_NAME . 
        
      - name: Configure Docker Client
        run:  |-
          gcloud auth configure-docker --quiet #authenticate to gcr
        
      - name: Push Docker Image to Container Registry GCR
        env: 
          IMAGE_NAME: ${{github.event.inputs.DockerImageName}}:${{github.event.inputs.tag}}
          PROJECT_ID: cicd-372106
        #tag docker image to gcr image format then push to gcr
        run: |-
          docker tag $IMAGE_NAME gcr.io/$PROJECT_ID/$IMAGE_NAME
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME
